@page "/student/add"
@page "/student/edit/{StudentId:int}"
@using SchoolApp.Admin.Web.Models
@using SchoolApp.Admin.Web.Services

@inject StudentService StudentService
@inject NavigationManager NavigationManager

<h3>Add/Edit Student</h3>

<EditForm Model="@student" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstName">First Name:</label>
        @if (student != null)
        {
            <InputText id="firstName" class="form-control" @bind-Value="student.FirstName"/>
            @:</div>
            <div class="form-group">
                <label for="lastName">Last Name:</label>
                <InputText id="lastName" class="form-control" @bind-Value="student.LastName"/>
            </div>
            @:<div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="student.Email"/>
        }


    </div>
    <a type="submit" class="btn btn-success">Save</a>
</EditForm>

@code {
    [Parameter]
    public string? StudentId { get; set; }

    private Student? student = new Student();

    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrWhiteSpace(StudentId))
        {
            student = await StudentService.GetStudentByIdAsync(StudentId);
        }
    }

    async Task HandleValidSubmit()
    {
        if (string.IsNullOrWhiteSpace(StudentId))
        {
            await StudentService.UpdateStudentAsync(student.StudentId, student);
        }
        else
        {
            await StudentService.AddStudentAsync(student);
        }

        NavigationManager.NavigateTo("/students");
    }
}
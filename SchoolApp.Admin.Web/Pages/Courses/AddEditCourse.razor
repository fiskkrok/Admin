@page "/course/add"
@page "/course/edit/{CourseId:int}"
@inject CourseService CourseService
@inject NavigationManager NavigationManager

<h3>Add/Edit Course</h3>

<EditForm Model="@course" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div class="form-group">
        <label for="courseCode">Course Code:</label>
        <InputText id="courseCode" class="form-control" @bind-Value="course.CourseCode" />
    </div>
    <div class="form-group">
        <label for="courseName">Course Name:</label>
        <InputText id="courseName" class="form-control" @bind-Value="course.CourseName" />
    </div>
    <div class="form-group">
        <label for="credits">Credits:</label>
        <InputNumber id="credits" class="form-control" @bind-Value="course.Credits" />
    </div>
    <button type="submit" class="btn btn-success">Save</button>
</EditForm>

@code {
    [Parameter]
    public int? CourseId { get; set; }

    private Course? course = new Course();

    protected override async Task OnParametersSetAsync()
    {
        if (CourseId.HasValue)
        {
            course = await CourseService.GetCourseByIdAsync(CourseId.Value);
        }
    }

    async Task HandleValidSubmit()
    {
        if (CourseId.HasValue)
        {
            await CourseService.UpdateCourseAsync(course.Id, course);
        }
        else
        {
            await CourseService.AddCourseAsync(course);
        }

        NavigationManager.NavigateTo("/courses");
    }
}
@page "/student/add"
@page "/student/edit/{StudentId:int}"

@inject StudentService StudentService
@inject NavigationManager NavigationManager

<h3>Add/Edit Student</h3>

<EditForm Model="@student" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstName">First Name:</label>
        <InputText id="firstName" class="form-control" @bind-Value="student.FirstName" />
    </div>
    <div class="form-group">
        <label for="lastName">Last Name:</label>
        <InputText id="lastName" class="form-control" @bind-Value="student.LastName" />
    </div>
    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="student.Email" />
    </div>
    <button type="submit" class="btn btn-success">Save</button>
</EditForm>

@code {
    [Parameter]
    public int? StudentId { get; set; }

    private Student? student = new Student();

    protected override async Task OnParametersSetAsync()
    {
        if (StudentId.HasValue)
        {
            student = await StudentService.GetStudentByIdAsync(StudentId.Value);
        }
    }

    async Task HandleValidSubmit()
    {
        if (StudentId.HasValue)
        {
            await StudentService.UpdateStudentAsync(student.Id, student);
        }
        else
        {
            await StudentService.AddStudentAsync(student);
        }

        NavigationManager.NavigateTo("/students");
    }
}